#if !canImport(ObjectiveC)
import XCTest

extension ScoutTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScoutTests = [
        ("testArgMatchFailure", testArgMatchFailure),
        ("testAssertNoExpectationsDoesNotAssertWhenEmpty", testAssertNoExpectationsDoesNotAssertWhenEmpty),
        ("testAssertRemainingExpectationsIgnoresPersistentExpectations", testAssertRemainingExpectationsIgnoresPersistentExpectations),
        ("testAssertRemainingExpectationsWithOneExpectation", testAssertRemainingExpectationsWithOneExpectation),
        ("testAssertRemainingExpectationsWithRemainingValues", testAssertRemainingExpectationsWithRemainingValues),
        ("testAssertRemainingFuncCallExpectationsWithRemainingCall", testAssertRemainingFuncCallExpectationsWithRemainingCall),
        ("testAssertRemainingFuncExpectationsIgnorePersistent", testAssertRemainingFuncExpectationsIgnorePersistent),
        ("testAssertRemainingFuncExpectationsWithOneExpectation", testAssertRemainingFuncExpectationsWithOneExpectation),
        ("testAssertRemainingFuncExpectationsWithRemainingCall", testAssertRemainingFuncExpectationsWithRemainingCall),
        ("testFuncThrows", testFuncThrows),
        ("testKeywordFunc", testKeywordFunc),
        ("testKeywordFuncAlwaysReturns", testKeywordFuncAlwaysReturns),
        ("testKeywordFuncFailure", testKeywordFuncFailure),
        ("testKeywordFuncReturns", testKeywordFuncReturns),
        ("testKeywordFuncReturnsOnlyTwice", testKeywordFuncReturnsOnlyTwice),
        ("testNoExpectationsDefined", testNoExpectationsDefined),
        ("testNullaryFunc", testNullaryFunc),
        ("testPredicateMatcher", testPredicateMatcher),
        ("testReturningVarForMember", testReturningVarForMember),
        ("testReturningVarForMemberOnce", testReturningVarForMemberOnce),
        ("testReturningVarForMemberTwice", testReturningVarForMemberTwice),
        ("testUnaryThrowsCallsBlock", testUnaryThrowsCallsBlock),
        ("testWrongNumberOfArgs", testWrongNumberOfArgs),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ScoutTests.__allTests__ScoutTests),
    ]
}
#endif
